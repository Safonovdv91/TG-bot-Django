services:
  mg_bot_db:
    container_name: mg_bot_db
    hostname: mg_bot_db
    image: postgres:17.2
    restart: unless-stopped
    env_file:
      - .env.prod
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - mg_bot_postgres:/var/lib/postgresql/data
    networks:
      mg_bot-net:

  mg_bot_redis:
    image: redis:latest
    container_name: mg_bot_redis
    restart: unless-stopped
    networks:
      mg_bot-net:

  mg_bot_django:
    build:
      context: .
    container_name: mg_bot_django
    env_file:
      - .env.prod
    restart: unless-stopped
    depends_on:
      - mg_bot_db
      - mg_bot_redis
    volumes:
      - mg_static_data:/app/static
      - mg_media_data:/app/media
    networks:
      mg_bot-net:

  bot:
    build: .
    container_name: mg_tgbot
    command: python manage.py runbot
    env_file:
      - .env.prod
    depends_on:
      - mg_bot_db
      - mg_bot_redis
    networks:
      mg_bot-net:

  mg_bot_nginx:
    image: nginx:latest
    container_name: mg_bot_nginx
    ports:
      - "10000:80"
    depends_on:
      - mg_bot_django
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - mg_static_data:/app/static
      - mg_media_data:/app/media
    networks:
      mg_bot-net:

  celery-worker:
    build:
      context: .
    container_name: mg_bot_celery-worker
    restart: unless-stopped
    env_file:
      - .env.prod
    command:
      - celery
      - -A
      - core
      - worker
      - --loglevel=info
      - --concurrency=1
    depends_on:
      - mg_bot_db
      - mg_bot_redis
    volumes:
      - mg_db_backup:/app/backups
    networks:
      mg_bot-net:

  celery-beat:
    build:
      context: .
    container_name: mg_bot_celery_beat
    restart: unless-stopped
    env_file:
      - .env.prod
    command:
      - celery
      - -A
      - core
      - beat
      - --loglevel=info
      - --scheduler=django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - mg_bot_db
      - mg_bot_redis
    networks:
      - mg_bot-net

  flower:
    build:
      context: .
    container_name: mg_bot_flower
    env_file:
      - .env.prod
    command:
      - celery
      - -A
      - core
      - flower
      - --port=5555
    ports:
      - "10005:5555"
    depends_on:
      - celery-worker
    networks:
      - mg_bot-net

networks:
  mg_bot-net:
    driver: bridge

volumes:
  mg_bot_postgres:
  mg_static_data:
    labels:
      ru.mg_bot.description: "Volume for static files"
  mg_media_data:
    labels:
      ru.mg_bot.description: "Volume for Media files"
  mg_db_backup: